name: Crea PR da Issue di normalizzazione

on:
  issues:
    types: [opened, edited]

jobs:
  generate-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - uses: actions/checkout@v4

      - name: Esci se manca la label
        if: |
          !contains(github.event.issue.labels.*.name, 'normalizzazione') &&
          !contains(github.event.issue.labels.*.name, 'richiesta')
        run: |
          echo "Etichetta mancante, esco"
          exit 1

      - name: Debug issue body
        run: |
          echo "${{ github.event.issue.body }}"

      - id: parse
        run: |
          MAL_NAME=$(echo "${{ github.event.issue.body }}" | awk '/^### MAL English name/{getline; while($0 ~ /^ *$/){getline}; print $0}')
          AS_NAME=$(echo "${{ github.event.issue.body }}" | awk '/^### AnimeSaturn name/{getline; while($0 ~ /^ *$/){getline}; print $0}')
          echo "Estratto MAL_NAME: $MAL_NAME"
          echo "Estratto AS_NAME: $AS_NAME"
          echo "mal_name=$MAL_NAME" >> $GITHUB_OUTPUT
          echo "as_name=$AS_NAME" >> $GITHUB_OUTPUT
          echo "MAL_NAME_ENV=$MAL_NAME" >> $GITHUB_ENV
          echo "AS_NAME_ENV=$AS_NAME" >> $GITHUB_ENV
          echo "Parsed MAL name: '$MAL_NAME'"
          echo "Parsed AS name: '$AS_NAME'"

      - name: Aggiungi riga di normalizzazione
        env:
          MAL_NAME: ${{ env.MAL_NAME_ENV }}
          AS_NAME: ${{ env.AS_NAME_ENV }}
        run: |
          python3 -c '
          import os
          import re
          import json

          mal_name = os.environ.get("MAL_NAME")
          as_name = os.environ.get("AS_NAME")

          if not mal_name or not as_name:
              print("Error: MAL or AnimeSaturn name is empty. Exiting.")
              exit(1)

          with open("src/providers/animesaturn-provider.ts", "r", encoding="utf-8") as f:
              content = f.read()

          new_line = f"    {json.dumps(mal_name)}: {json.dumps(as_name)},"

          # This pattern finds the comment and captures the indentation of that line
          pattern = re.compile(r"(\s*)// Qui puoi aggiungere altre normalizzazioni custom")

          # We replace the found pattern with the new line, a newline character, and then the original matched content
          new_content, num_replacements = pattern.subn(rf"\n{new_line}\n\g<0>", content, 1)

          if num_replacements == 0:
              print("Error: The placeholder comment was not found in the file.")
              exit(1)

          with open("src/providers/animesaturn-provider.ts", "w", encoding="utf-8") as f:
              f.write(new_content)

          print(f"Successfully added normalization: {new_line.strip()}")
          '

      - name: Crea PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat(normalize): add \"${{ steps.parse.outputs.mal_name }}\""
          branch: "normalizza-${{ github.event.issue.number }}"
          title: "Normalizzazione: ${{ steps.parse.outputs.mal_name }}"
          body: |
            ## ðŸ”— Nuova normalizzazione

            | Campo | Valore |
            |-------|--------|
            | **MAL English name** | ${{ steps.parse.outputs.mal_name }} |
            | **AnimeSaturn name** | ${{ steps.parse.outputs.as_name }} |

            ### Checklist
            - [ ] Compilazione corretta secondo Issue
            - [ ] I test esistenti passano
            - [ ] Non rompe altre normalizzazioni

            _Questa PR Ã¨ stata generata automaticamente dalla Issue #${{ github.event.issue.number }}._ 
